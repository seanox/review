
The anti-pattern file is a text file that is read line by line.
A hash at the beginning of a line (blank characters are allowed before) marks
the line as a comment. Comments are not read and skipped. Means they are
processed as if the line does not exist.
Characters can be encoded hexadecimal.

    e.g. \x<HEX> (\x23 = #, \x20 = space) 

The anti-pattern are organized in sections.
A section begins after a blank line or if the line does not begin with a blank
character. Therefore, the subsequent lines of a section are indented.
If a line is to be continued exactly, the line must begin with blanks and '...'.
The line is then continued with the first character after '...'.

The section of a anti-pattern has three and more lines.

    line 1: file filter

- space characters are separators
- every part of the filter must start with a directive
- backslash / slash are identical
- placeholders * and ? are supported
- delimiter + (include) and - (exclude)

    line 2 and more: primary pattern, optional partial patterns (subpatterns)
    
- primary pattern is the main pattern (always an include)
  The match found is then searched for Partial patterns.
  Partial patterns can be inclusions and exclusions. Inclusions must begin with
  + and - begin exclusions. The primary pattern has no directive.
  All partial patterns must be true, only then is the action executed.
- patterns are separated by white spaces
  In a pattern, spaces must be encoded hexadecimal.
  
    last line: action
    
The action is primarily a regular replacement, corresponding to the search
pattern. When replacing, the groups and the backward references of the primary
pattern can be used. Partial patterns cannot be used.

    The following additional actions are supported:
    
    TEST: <replacment>
Displays a preview of the replacement without performing the replacement.    
    
    VOID:
Deletes the match.

    INFO: <message>
Displays a information about a location without performing a replacement.