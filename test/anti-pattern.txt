# Syntax
#
#   - line oriented
#   - comments start with #
#   - escaping of characters \x<HEX>
#     \x23 = #
#     \x20 = space
#   - more commands
#     \R    line breaks (cross-platform)
#     VOID  empty string when replacing (delete)
#     ...   continuation of the line#
#
# A (anti)pattern has three lines.#
#
#   1. File Filter#
#
#     - backslash / slash are identical
#     - placeholders * and ? are supported
#     - delimiter + (include) and - (exclude)
#     - exclusions at the level of place of finding
#       file[line] or file[line:char]#
#
#   2. Search Pattern##
#
#     - regular expression (searches the complete content)
#     - follows the after first space an ! the following expression is
#      interpreted as exclusion:
#          Face\.\w+ !Face\.(xhtml|on(Show|Validate|Error|Event))
#      search: Face\.\w+, ignored: Face.xhtml, Face.onShow, Face.onValidate, ...
#          IMPORTANT:
#      The exclusion is only searched within the place of finding.
#      If located the exclusion outside, then the pattern must be extended.
#
#   3. Action
#
#     - replace expression ($1 - $9 are supported)
#     - action starts with INFO: only one message is displayed
#     - action starts with ECHO: or TEST: a preview of the replacement is
#       displayed
#     - action is VOID the the reference is replaced by an empty string, which
#       is equal to the deletion
#
# Lines can be continue if they end with ... and after line breaks begin again
# with ... then the lines are used as one line.


# examples for java ============================================================

# finds capitalized variables
# include all *.java files, ignore all .svn directories
#- */.svn/* + *.java
#    private\s+[A-Za-z]+\s[A-Z][\w]+;
#    INFO: check it, uncapitalize

# finds constants without final
# include all *.java files, ignore all .svn directories
#- */.svn/* + *.java
#    \x20+(\x20+[a-z]+){1,}\x20+[A-Z]{2,} !\sfinal\s
#    INFO: check it, use 'final' for constants

# finds constants without static
# include all *.java files, ignore all .svn directories
#- */.svn/* + *.java
#    \x20+(\x20+[a-z]+){1,}\x20+[A-Z]{2,} !\sstatic\s
#    INFO: check it, use 'static' for constants

# finds class|interface|enun with invalid name
# include all *.java files, ignore all .svn directories
#- */.svn/* + *.java
#    \s(class|interface|enun)\s+[A-Z]*[a-zA-Z0-9]*[A-Z]{2}
#    INFO: check it, use camel case for class/interface/enum

# finds class|interface|enun with invalid name
# include all *.java files, ignore all .svn directories
#- */.svn/* + *.java
#    \s(class|interface|enun)\s+(?i)[a-z0-9]*[^a-z0-9\s]
#    INFO: check it, use only chars a-z, 0-9 for class/interface/enum

# finds all new Boolean(true) and replace in Boolean.TRUE 
# include all *.java files, ignore all .svn directories
#- */.svn/* + *.java    
#    new\s+Boolean\(\s*true\s*\)
#    TEST: Boolean.TRUE

# finds all new Boolean(false) and replace in Boolean.FALSE
# include all *.java files, ignore all .svn directories
#- */.svn/* + *.java    
#    new\s+Boolean\s*\(\s*false\s*\)
#    TEST: Boolean.FALSE
  
# finds all the places where 'valueOf' can be used and correct it  
# include all *.java files, ignore all .svn directories
#- */.svn/* + *.java    
#    new\s+(Boolean|Byte|Character|Double|Float|Integer|Long|Short)\s*\(
#    TEST: $1.valueOf(    


# examples for html ============================================================

# finds a-tag where the title-attribute ist empty or missing 
# include all *.html files, ignore all .svn directories
#- */.svn/* + *.html
#  (?i)<\s*a[^>]+> !(?i)\btitle="[^"]+"
#  INFO: check it, a-tag with invalid title-attribute

# finds a-tag where the href-attribute ist empty or missing
# include all *.html files, ignore all .svn directories
#- */.svn/* + *.html
#  (?i)<\s*a[^>]+> !(?i)\bhref="[^"]+"
#  INFO: check it, a-tag with invalid href-attribute

# finds input-tags without label-tag
# include all *.html files, ignore all .svn directories
#- */.svn/* + *.html
#   <\s*[^/].*?\s*<input !<\s*label
#  INFO: check it, use input alway with a label
