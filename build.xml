<?xml version="1.0" ?>
<project name="review" default="compile" basedir=".">

  <property name="workspace" value="."/>
  <property name="workspace.sources" value="${workspace}/sources"/>
  <property name="workspace.classes" value="${workspace}/classes"/>
  
  <property name="build" value="${workspace}/build"/>
  <property name="build.sources" value="${build}/sources"/>
  <property name="build.sources.filter" value="**/*.java,**/*.txt"/>
  <property name="build.classes" value="${build}/classes"/>
  <property name="build.file" value="${build}/${ant.project.name}.jar"/>
  
  <property name="release" value="${workspace}/release"/>
  <property name="release.version" value="1.3.4"/>
  <property name="release.date" value="20160818"/>  

  <property name="releases" value="${workspace}/releases"/>

  <target name="initialize">
    <delete dir="${build}"/>
    <echo file="${build}/build.temp" append="false">${release.date}</echo>
    <replaceregexp file="${build}/build.temp" match="(\d{4})(\d{2})(\d{2})"
      replace="release.year=\1${line.separator}release.month=\2${line.separator}release.day=\3"/>
    <property file="${build}/build.temp"/>
    <echo file="${build}/build.temp" append="false">${release.version}</echo>
    <replaceregexp file="${build}/build.temp" match="[^\da-zA-Z]+" replace="_" flags="g"/>
    <replaceregexp file="${build}/build.temp" match="^(.*)$" replace="release.version.plain=\1"/>
    <property file="${build}/build.temp"/>
    <echo file="${build}/build.temp" append="false">release.file=${release}/seanox-${ant.project.name}-${release.version.plain}.zip</echo>
    <property file="${build}/build.temp"/>
    <delete file="${build}/build.temp"/>
  </target>
  
  <target name="prepare">
    <copy todir="${build.sources}">
      <fileset dir="${workspace.sources}"/>
    </copy>    
    <replace dir="${build}" includes="${build.sources.filter}" token="#[ant:release-year]" value="${release.year}"/>
    <replace dir="${build}" includes="${build.sources.filter}" token="#[ant:release-month]" value="${release.month}"/>
    <replace dir="${build}" includes="${build.sources.filter}" token="#[ant:release-day]" value="${release.day}"/>
    <replace dir="${build}" includes="${build.sources.filter}" token="#[ant:release-date]" value="${release.date}"/>
    <replace dir="${build}" includes="${build.sources.filter}" token="#[ant:release-version]" value="${release.version}"/>
  </target>
  
  <target name="compile" depends="initialize,prepare">
    <mkdir dir="${build.classes}"/>
    <javac destdir="${build.classes}" deprecation="on" debug="off" includeantruntime="false">
      <src path="${build.sources}"/>
    </javac>
    <mkdir dir="${build.classes}/META-INF"/>
    <echo file="${build.classes}/META-INF/MANIFEST.MF" append="false" message="Manifest-Version: 1.0${line.separator}"/>
    <echo file="${build.classes}/META-INF/MANIFEST.MF" append="true" message="Build-Version: ${release.version}${line.separator}"/>
    <echo file="${build.classes}/META-INF/MANIFEST.MF" append="true" message="Build-Date: ${release.date}${line.separator}"/>
    <echo file="${build.classes}/META-INF/MANIFEST.MF" append="true" message="Main-Class: Review${line.separator}"/>
    <touch datetime="${release.date}" pattern="yyyyMMdd">
      <fileset dir="${build}"/>
    </touch>
    <zip destfile="${build.file}">
      <fileset dir="${build.classes}"/>
      <fileset dir="${build.sources}" includes="resources/*"/>
    </zip>
  </target>
  
  <target name="release" depends="compile">
    <delete dir="${release}"/>
    <mkdir dir="${release}"/>
    <delete dir="${build.sources}"/>
    <delete dir="${build.classes}"/>
    <copy file="${workspace}/.license" tofile="${build}/license.txt"/> 
    <touch datetime="${release.date}" pattern="yyyyMMdd">
      <fileset dir="${build}"/>
    </touch>  
    <zip destfile="${release.file}" basedir="${build}"/>
    <touch datetime="${release.date}" pattern="yyyyMMdd">
      <fileset dir="${release}"/>
    </touch>      
    <antcall target="clear"/>
    <copy file="${release.file}" todir="${releases}"/> 
  </target>

  <target name="clear">
    <delete dir="${build}"/>
  </target>
</project>